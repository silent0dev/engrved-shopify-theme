{% comment %}
	GEMPAGE BUILDER (https://apps.shopify.com/gempage)

	You SHOULD NOT modify source code in this page because
	It is automatically generated from GEMPAGE BUILDER
	Try to edit page with the live editor.
{% endcomment %}

            jQuery(function() {
                var $module = jQuery('#m-1568828641234').children('.module');
                $module.gfV3Product();
            });
        
        jQuery(function() {
            var $module = jQuery('#m-1568238403335').children('.module');
            $module.gfV3ProductPrice();
        }); 
    
            jQuery(function() {
                var $module = jQuery('#m-1568828641234-0').children('.module');
                var effect = $module.attr('data-effect');
                $module.gfV3ProductImage({
                    'effect': effect
                })
            });
        
            jQuery(function() {
                var $module = jQuery('#m-1568828641218').children('.module');
                $module.gfV3ProductImageList({
                    onImageClicked: function(imageUrl, imageZoomUrl) {}
                });

                var style = $module.attr('data-style');
                switch(style) {
                    case 'slider':
                        var navspeed = $module.data('navspeed'),
                            navlg = $module.data('navlg'),
                            navmd = $module.data('navmd'),
                            navsm = $module.data('navsm'),
                            navxs = $module.data('navxs'),
                            collg = $module.data('collg'),
                            colmd = $module.data('colmd'),
                            colsm = $module.data('colsm'),
                            colxs = $module.data('colxs'),
                            dotslg = $module.data('dotslg'),
                            dotsmd = $module.data('dotsmd'),
                            dotssm = $module.data('dotssm'),
                            dotsxs = $module.data('dotsxs'),

                            marginlg = parseInt($module.data('mlg')),
                            marginmd = parseInt($module.data('mmd')),
                            marginsm = parseInt($module.data('msm')),
                            marginxs = parseInt($module.data('mxs'));

                        var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';
                        if(mode == 'production') {
                            var loop = $module.data('loop');
                        } else {
                            var loop = 0;
                        }
                        $module.find('.gf_product-images-list').owlCarousel({
                            mouseDrag: true,
                            navSpeed: navspeed,
                            autoWidth: !1,
                            loo: loop,
                            responsiveClass:true,
                            responsive:{
                                0:{
                                    items:colxs,
                                    nav: navxs,
                                    dots:dotsxs,
                                    margin: marginxs
                                },
                                768:{
                                    items:colsm,
                                    nav: navsm,
                                    dots:dotssm,
                                    margin: marginsm
                                },
                                992:{
                                    items:colmd,
                                    nav: navmd,
                                    dots:dotsmd,
                                    margin: marginmd
                                },
                                1200:{
                                    items:collg,
                                    nav: navlg,
                                    dots:dotslg,
                                    margin: marginlg
                                }
                            }
                        });
                        break;
                }
            });
        
        jQuery(function() {
            var $module = jQuery('#m-1568238403281').children('.module');
        }); 
    
        jQuery(function() {
            var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';
            var $module = jQuery('#m-1557006327904').children('.module');
            if (mode == 'dev') {
                jQuery('#m-1557006327904').attr('data-name', '');
                jQuery('#m-1557006327904').css('background-image', 'none');
                jQuery('#m-1557006327904').css('min-height', '50px');
                jQuery('#m-1557006327904').removeAttr('data-image');
                
                var flag = true;
                var $bkLiquid = parent.jQuery('body').find('#gfFrame').contents().find('#module-1557006327904');
                if ($bkLiquid && $bkLiquid.length > 0) {
                    var $settings = $bkLiquid.find('.settings');
                    try {
                        var name = '';
                        var imageUrl = '';
                        settings = JSON.parse($settings.html());
                        for (var i = 0; i < settings.length; i++) {
                            if (settings[i].name == 'name') {
                                name = settings[i].default_value
                            }
                            if (settings[i].name == 'image') {
                                imageUrl = settings[i].default_value
                            }
                        }
                        if (imageUrl != '') {
                            flag = false;
                            jQuery('#m-1557006327904').css('background-image', 'url(' + imageUrl + ')');
                            jQuery('#m-1557006327904').css('min-height', '100px');
                            jQuery('#m-1557006327904').attr('data-image', 'true');
                        }
                        if (name != '' && name != 'Custom Code') {
                            flag = false;
                            jQuery('#m-1557006327904').attr('data-name', name);
                        }
                    } catch(error) {
                        console.log(error);
                    }
                }
                if (flag) {
                    jQuery('#m-1557006327904').attr('data-name', 'Right click on the module, then choose Edit Html / Liquid option to start writing your custom code.');
                }
            }

        }); 
    
        jQuery(function() {
            var $module = jQuery('#m-1568238403218').children('.module');
            var style = $module.attr('data-style');
            var updatePrice = $module.attr('data-updateprice');

            $module.gfV3ProductQuantity({
                'style': style,
                'updatePrice': updatePrice
            });
        }); 
    
        jQuery(function() {
            var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';
            var $module = jQuery('#m-1580663437053').children('.module');
            if (mode == 'dev') {
                jQuery('#m-1580663437053').attr('data-name', '');
                jQuery('#m-1580663437053').css('background-image', 'none');
                jQuery('#m-1580663437053').css('min-height', '50px');
                jQuery('#m-1580663437053').removeAttr('data-image');
                
                var flag = true;
                var $bkLiquid = parent.jQuery('body').find('#gfFrame').contents().find('#module-1580663437053');
                if ($bkLiquid && $bkLiquid.length > 0) {
                    var $settings = $bkLiquid.find('.settings');
                    try {
                        var name = '';
                        var imageUrl = '';
                        settings = JSON.parse($settings.html());
                        for (var i = 0; i < settings.length; i++) {
                            if (settings[i].name == 'name') {
                                name = settings[i].default_value
                            }
                            if (settings[i].name == 'image') {
                                imageUrl = settings[i].default_value
                            }
                        }
                        if (imageUrl != '') {
                            flag = false;
                            jQuery('#m-1580663437053').css('background-image', 'url(' + imageUrl + ')');
                            jQuery('#m-1580663437053').css('min-height', '100px');
                            jQuery('#m-1580663437053').attr('data-image', 'true');
                        }
                        if (name != '' && name != 'Custom Code') {
                            flag = false;
                            jQuery('#m-1580663437053').attr('data-name', name);
                        }
                    } catch(error) {
                        console.log(error);
                    }
                }
                if (flag) {
                    jQuery('#m-1580663437053').attr('data-name', 'Right click on the module, then choose Edit Html / Liquid option to start writing your custom code.');
                }
            }

        }); 
    
    jQuery(function() {
        var $module = jQuery('#m-1568828641303').children('.module');
        $module.gfV3ProductCartButton({ onItemAdded: function() {}});
    });
  
    jQuery(function() {
        var $module = jQuery('#m-1572275824491').children('.module');
        var activeTab = parseInt($module.attr('data-activeTab')) - 1;
        var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';

        $module.gfV3ResTabs({
            'activeTab': activeTab,
            'mode': mode,
            tabSelected: function(index) {
                var tabInactiveBgColor = $module.attr('data-inactiveTabBgColor');
                var tabInactiveColor = $module.attr('data-inactiveTabColor');
                var tabBgColor = $module.attr('data-tabBgColor');
                var tabColor = $module.attr('data-tabColor');
                var borderColor = $module.attr('data-borderColor');
                var borderSize = $module.attr('data-borderSize');

                var $gfTabs = $module.find('>ul>li.gf_tab');
                var $gfTabActive = $module.find('>ul>li.gf_tab-active');
                var $gfTabPanels = $module.find('>.gf_tab-panel');

                if($module.hasClass('style1')) {
                    $gfTabs
                    .css('margin-left', '-' + borderSize)
                    .css('border', borderSize + ' solid ' + borderColor)
                    .css('border-bottom', borderSize + ' solid ' + borderColor);

                    $module.find('>ul>li.gf_tab:first').css('margin-left', '0px');

                } else if($module.hasClass('style3')) {
                    $gfTabs.css('border-bottom', borderSize + ' solid ' + tabBgColor);
                }

                if(!$module.hasClass('style3')) {
                    $gfTabs.css('background-color', tabInactiveBgColor);
                    $gfTabActive.css('background-color', tabBgColor);
                }

                $gfTabs.css('color', tabInactiveColor);
                $gfTabActive.css('color', tabColor);

                if($module.hasClass('style1')) {
                    $gfTabActive.children('.gf_tab-bottom')
                    .css('backgroundColor', tabBgColor)
                    .css('height', borderSize)
                    .css('bottom', '-' + borderSize);
                } else if($module.hasClass('style3')) {
                    $gfTabActive.children('.gf_tab-bottom')
                    .css('backgroundColor', borderColor)
                    .css('height', borderSize)
                    .css('bottom', '-' + borderSize);
                }
                $gfTabPanels
                .css('top', '-' + borderSize)
                .css('background-color', tabBgColor)
                .css('border', '1px solid ' + borderColor);

                if($module.hasClass('style1')) {
                    $gfTabPanels.css('border', borderSize + ' solid ' + borderColor);
                } else {
                    $gfTabPanels.css('border', 'none');
                }

                // Fix (P) Desc read more bug
                $module.find('.module-wrap[data-label="(P) Description"]').each(function(index, el) {
                    if (jQuery(el).children('.module').data('gfv3productdesc') != undefined) {
                        jQuery(el).children(".module").data("gfv3productdesc").initReadMore();
                    }
                })
            }
        });
        if(mode == 'dev') {
            var moduleId = "1572275824491";
            var moduleIdSlug = moduleId.toString().replace(/-/g, '');
            if (moduleIdSlug == "1572275824491") {
                window.getTab1572275824491 = function() {
                    return $module.data('gfv3restabs');
                }
            }
        }
    });
  
    jQuery(function() {
        var $module = jQuery('#m-1570928031373').children('.module');
    });
  
        jQuery(function() {
            var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';
            var $module = jQuery('#m-1580665430464').children('.module');
            if (mode == 'dev') {
                jQuery('#m-1580665430464').attr('data-name', '');
                jQuery('#m-1580665430464').css('background-image', 'none');
                jQuery('#m-1580665430464').css('min-height', '50px');
                jQuery('#m-1580665430464').removeAttr('data-image');
                
                var flag = true;
                var $bkLiquid = parent.jQuery('body').find('#gfFrame').contents().find('#module-1580665430464');
                if ($bkLiquid && $bkLiquid.length > 0) {
                    var $settings = $bkLiquid.find('.settings');
                    try {
                        var name = '';
                        var imageUrl = '';
                        settings = JSON.parse($settings.html());
                        for (var i = 0; i < settings.length; i++) {
                            if (settings[i].name == 'name') {
                                name = settings[i].default_value
                            }
                            if (settings[i].name == 'image') {
                                imageUrl = settings[i].default_value
                            }
                        }
                        if (imageUrl != '') {
                            flag = false;
                            jQuery('#m-1580665430464').css('background-image', 'url(' + imageUrl + ')');
                            jQuery('#m-1580665430464').css('min-height', '100px');
                            jQuery('#m-1580665430464').attr('data-image', 'true');
                        }
                        if (name != '' && name != 'Custom Code') {
                            flag = false;
                            jQuery('#m-1580665430464').attr('data-name', name);
                        }
                    } catch(error) {
                        console.log(error);
                    }
                }
                if (flag) {
                    jQuery('#m-1580665430464').attr('data-name', 'Right click on the module, then choose Edit Html / Liquid option to start writing your custom code.');
                }
            }

        }); 
    jQuery(function(){try{if(jQuery().gfV1Lazyload){var $module=jQuery(window);$module.gfV1Lazyload({delay:125})}}catch(err){}})